version: '3.8'

services:     
  postgres:
    image: postgres:13.18-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stock_trading
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/local/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: amacneil/dbmate
    command: -d "/db/migrations" up
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/stock_trading?sslmode=disable
    volumes:
      - ./db/migrations:/db/migrations
    depends_on:
      postgres:
        condition: service_healthy
      
  dynamodb:
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal"
    volumes:
      - dynamodb_data:/home/dynamodblocal
      
  mailhog:
    image: mailhog/mailhog:latest
    platform: linux/amd64
    ports:
      - "1025:1025"  # SMTP server port
      - "8025:8025"  # Web UI port
    environment:
      - MH_STORAGE=memory

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
    depends_on:
      - dynamodb

volumes:
  postgres_data:
  dynamodb_data:
